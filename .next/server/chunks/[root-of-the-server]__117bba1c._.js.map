{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///D:/amaronshop/app/api/login/route.js"],"sourcesContent":["import mongoose from 'mongoose'\r\nimport { NextResponse } from 'next/server'\r\nimport bcrypt from 'bcryptjs'\r\nimport jwt from 'jsonwebtoken'\r\n\r\nconst MONGO_URI = process.env.MONGO_URI\r\nconst JWT_SECRET = process.env.JWT_SECRET\r\n\r\nif (!MONGO_URI) {\r\n  console.error('MONGO_URI is not set in environment variables');\r\n  throw new Error('MONGO_URI is not set');\r\n}\r\nif (!JWT_SECRET) {\r\n  console.error('JWT_SECRET is not set in environment variables');\r\n  throw new Error('JWT_SECRET is not set');\r\n}\r\n\r\n// Mongoose User model (reuse from signup)\r\nconst userSchema = new mongoose.Schema({\r\n  firstName: { type: String, required: true },\r\n  lastName: { type: String, required: true },\r\n  email: { type: String, required: true, unique: true },\r\n  password: { type: String, required: true },\r\n}, { timestamps: true })\r\n\r\nconst User = mongoose.models.User || mongoose.model('User', userSchema)\r\n\r\nasync function connectDB() {\r\n  if (mongoose.connection.readyState === 0) {\r\n    await mongoose.connect(MONGO_URI)\r\n  }\r\n}\r\n\r\nexport async function POST(req) {\r\n  try {\r\n    await connectDB()\r\n    const body = await req.json()\r\n    const { email, password } = body\r\n    if (!email || !password) {\r\n      return NextResponse.json({ message: 'Email and password are required' }, { status: 400 })\r\n    }\r\n    const user = await User.findOne({ email })\r\n    if (!user) {\r\n      return NextResponse.json({ message: 'User not found. Please sign up first.' }, { status: 404 })\r\n    }\r\n    const isMatch = await bcrypt.compare(password, user.password)\r\n    if (!isMatch) {\r\n      return NextResponse.json({ message: 'Invalid password' }, { status: 401 })\r\n    }\r\n    // Generate JWT token with 1 day expiry, include user data (not password)\r\n    const token = jwt.sign({\r\n      userId: user._id,\r\n      email: user.email,\r\n      firstName: user.firstName,\r\n      lastName: user.lastName\r\n    }, JWT_SECRET, { expiresIn: '1d' })\r\n    return NextResponse.json({\r\n      token,\r\n      user: {\r\n        id: user._id,\r\n        email: user.email,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName\r\n      }\r\n    }, { status: 200 })\r\n  } catch (err) {\r\n    return NextResponse.json({ message: 'Server error', error: err.message }, { status: 500 })\r\n  }\r\n} "],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;AAEA,MAAM,YAAY,QAAQ,GAAG,CAAC,SAAS;AACvC,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU;AAEzC,IAAI,CAAC,WAAW;IACd,QAAQ,KAAK,CAAC;IACd,MAAM,IAAI,MAAM;AAClB;AACA,IAAI,CAAC,YAAY;IACf,QAAQ,KAAK,CAAC;IACd,MAAM,IAAI,MAAM;AAClB;AAEA,0CAA0C;AAC1C,MAAM,aAAa,IAAI,oHAAQ,CAAC,MAAM,CAAC;IACrC,WAAW;QAAE,MAAM;QAAQ,UAAU;IAAK;IAC1C,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;AAC3C,GAAG;IAAE,YAAY;AAAK;AAEtB,MAAM,OAAO,oHAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,oHAAQ,CAAC,KAAK,CAAC,QAAQ;AAE5D,eAAe;IACb,IAAI,oHAAQ,CAAC,UAAU,CAAC,UAAU,KAAK,GAAG;QACxC,MAAM,oHAAQ,CAAC,OAAO,CAAC;IACzB;AACF;AAEO,eAAe,KAAK,GAAG;IAC5B,IAAI;QACF,MAAM;QACN,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;QAC5B,IAAI,CAAC,SAAS,CAAC,UAAU;YACvB,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAkC,GAAG;gBAAE,QAAQ;YAAI;QACzF;QACA,MAAM,OAAO,MAAM,KAAK,OAAO,CAAC;YAAE;QAAM;QACxC,IAAI,CAAC,MAAM;YACT,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAwC,GAAG;gBAAE,QAAQ;YAAI;QAC/F;QACA,MAAM,UAAU,MAAM,8IAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;QAC5D,IAAI,CAAC,SAAS;YACZ,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAmB,GAAG;gBAAE,QAAQ;YAAI;QAC1E;QACA,yEAAyE;QACzE,MAAM,QAAQ,kJAAG,CAAC,IAAI,CAAC;YACrB,QAAQ,KAAK,GAAG;YAChB,OAAO,KAAK,KAAK;YACjB,WAAW,KAAK,SAAS;YACzB,UAAU,KAAK,QAAQ;QACzB,GAAG,YAAY;YAAE,WAAW;QAAK;QACjC,OAAO,gJAAY,CAAC,IAAI,CAAC;YACvB;YACA,MAAM;gBACJ,IAAI,KAAK,GAAG;gBACZ,OAAO,KAAK,KAAK;gBACjB,WAAW,KAAK,SAAS;gBACzB,UAAU,KAAK,QAAQ;YACzB;QACF,GAAG;YAAE,QAAQ;QAAI;IACnB,EAAE,OAAO,KAAK;QACZ,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAgB,OAAO,IAAI,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC1F;AACF","debugId":null}}]
}