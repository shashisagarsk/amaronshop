{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/amaronshop/app/cart/page.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport Image from 'next/image';\r\nimport { Trash2, Plus, Minus } from 'lucide-react';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/navigation'; // Import useRouter\r\n\r\n// Helper function to get user info from localStorage\r\nconst getUser = () => {\r\n  if (typeof window === \"undefined\") return null;\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token) {\r\n    try { return jwtDecode(token); } catch {}\r\n  }\r\n  const userStr = localStorage.getItem(\"user\");\r\n  if (userStr) {\r\n    try { return JSON.parse(userStr); } catch {}\r\n  }\r\n  return null;\r\n};\r\n\r\n// Helper function to get the correct cart key\r\nconst getCartKey = (user) => {\r\n  if (user && (user.id || user.userId)) return `cart_${user.id || user.userId}`;\r\n  if (user && user.email) return `cart_${user.email}`;\r\n  return \"cart_guest\";\r\n};\r\n\r\nexport default function CartPage() {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // New state to track login status\r\n  const router = useRouter(); // Initialize router for navigation\r\n\r\n  // This function now also checks and sets the login status\r\n  const loadCartAndUserStatus = () => {\r\n    const user = getUser();\r\n    setIsLoggedIn(!!user); // Set true if user exists, otherwise false\r\n    const cartKey = getCartKey(user);\r\n    const storedCart = JSON.parse(localStorage.getItem(cartKey) || '[]');\r\n    setCartItems(storedCart);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCartAndUserStatus();\r\n    window.addEventListener('storage', loadCartAndUserStatus);\r\n    return () => {\r\n      window.removeEventListener('storage', loadCartAndUserStatus);\r\n    };\r\n  }, []);\r\n\r\n  const saveCart = (updatedCart) => {\r\n    const user = getUser();\r\n    const cartKey = getCartKey(user);\r\n    localStorage.setItem(cartKey, JSON.stringify(updatedCart));\r\n    window.dispatchEvent(new Event(\"storage\"));\r\n  };\r\n\r\n  const handleQuantityChange = (id, newQuantity) => {\r\n    if (newQuantity < 1) {\r\n      removeItem(id);\r\n    } else {\r\n      const updatedCart = cartItems.map((item) =>\r\n        item.id === id ? { ...item, quantity: newQuantity } : item\r\n      );\r\n      setCartItems(updatedCart);\r\n      saveCart(updatedCart);\r\n    }\r\n  };\r\n\r\n  const removeItem = (id) => {\r\n    const updatedCart = cartItems.filter((item) => item.id !== id);\r\n    setCartItems(updatedCart);\r\n    saveCart(updatedCart);\r\n  };\r\n\r\n  const handleCheckout = () => {\r\n    // This is where your actual checkout logic (e.g., payment) would go\r\n    alert(\"Proceeding to checkout!\");\r\n  };\r\n\r\n  const totalPrice = cartItems.reduce((total, item) => total + item.price * item.quantity, 0).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto px-4 sm:px-6 py-10\">\r\n      <h1 className=\"text-3xl font-bold mb-8 text-center\">Shopping Cart</h1>\r\n\r\n      {cartItems.length === 0 ? (\r\n        <div className=\"text-center text-gray-500 mt-10\">\r\n          <p>Your cart is empty.</p>\r\n          <Link \r\n  href=\"/\" \r\n  className=\"inline-block mt-4 px-6 py-2 bg-black text-white font-semibold rounded-lg shadow-md hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-700 transition-colors\"\r\n>\r\n  Continue Shopping\r\n</Link>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          {/* Cart Items List */}\r\n          <div className=\"space-y-4\">\r\n            {cartItems.map((item) => (\r\n              <div key={item.id} className=\"border-b pb-4 flex flex-col sm:flex-row items-center justify-between space-y-4 sm:space-y-0\">\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <Image\r\n                    src={item.image || '/placeholder.svg'}\r\n                    alt={item.name}\r\n                    width={80}\r\n                    height={80}\r\n                    className=\"rounded-lg object-cover\"\r\n                  />\r\n                  <div>\r\n                    <h2 className=\"text-lg font-semibold\">{item.name}</h2>\r\n                    <p className=\"text-sm text-gray-500\">{item.description}</p>\r\n                    <p className=\"font-medium sm:hidden mt-2\">${item.price.toFixed(2)}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <div className=\"flex items-center border rounded-md\">\r\n                    <button\r\n                      onClick={() => handleQuantityChange(item.id, item.quantity - 1)}\r\n                      className=\"px-3 py-1 text-gray-700 hover:bg-gray-100 rounded-l-md\"\r\n                    >\r\n                      <Minus size={16} />\r\n                    </button>\r\n                    <span className=\"px-4 py-1 font-medium\">{item.quantity}</span>\r\n                    <button\r\n                      onClick={() => handleQuantityChange(item.id, item.quantity + 1)}\r\n                      className=\"px-3 py-1 text-gray-700 hover:bg-gray-100 rounded-r-md\"\r\n                    >\r\n                      <Plus size={16} />\r\n                    </button>\r\n                  </div>\r\n                  <span className=\"font-bold w-20 text-center hidden sm:block\">${(item.price * item.quantity).toFixed(2)}</span>\r\n                  <button\r\n                    onClick={() => removeItem(item.id)}\r\n                    className=\"p-2 text-red-500 hover:text-red-700 hover:bg-red-50 rounded-full\"\r\n                  >\r\n                    <Trash2 size={20} />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Cart Summary & Conditional Checkout Button */}\r\n          <div className=\"mt-8 flex flex-col items-end\">\r\n            <div className=\"text-2xl font-bold mb-4\">\r\n              <span>Total: </span>\r\n              <span>${totalPrice}</span>\r\n            </div>\r\n            \r\n            {/* --- CHANGE STARTS HERE --- */}\r\n            {isLoggedIn ? (\r\n              <button \r\n                onClick={handleCheckout}\r\n                className=\"px-8 py-3 bg-gray-800 text-white rounded-lg hover:bg-black transition-colors\"\r\n              >\r\n                Proceed to Checkout\r\n              </button>\r\n            ) : (\r\n              <button \r\n                onClick={() => router.push('/login')}\r\n                className=\"px-8 py-3 bg-gray-800 text-white rounded-lg hover:bg-gray-900 transition-colors\"\r\n              >\r\n                Login to Buy\r\n              </button>\r\n            )}\r\n            {/* --- CHANGE ENDS HERE --- */}\r\n\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}