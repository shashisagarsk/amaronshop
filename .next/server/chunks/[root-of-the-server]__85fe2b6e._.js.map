{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///D:/2025%20Project/amaron/app/api/signup/route.js"],"sourcesContent":["import mongoose from 'mongoose'\r\nimport { NextResponse } from 'next/server'\r\nimport bcrypt from 'bcryptjs'\r\nimport jwt from 'jsonwebtoken'\r\n\r\nconst MONGO_URI = process.env.MONGO_URI\r\nconst JWT_SECRET = process.env.JWT_SECRET\r\n\r\nif (!MONGO_URI) {\r\n  console.error('MONGO_URI is not set in environment variables');\r\n  throw new Error('MONGO_URI is not set');\r\n}\r\nif (!JWT_SECRET) {\r\n  console.error('JWT_SECRET is not set in environment variables');\r\n  throw new Error('JWT_SECRET is not set');\r\n}\r\n\r\n// Mongoose User model (define inline to avoid import issues)\r\nconst userSchema = new mongoose.Schema({\r\n  firstName: { type: String, required: true },\r\n  lastName: { type: String, required: true },\r\n  email: { type: String, required: true, unique: true },\r\n  password: { type: String, required: true },\r\n}, { timestamps: true })\r\n\r\nconst User = mongoose.models.User || mongoose.model('User', userSchema)\r\n\r\nasync function connectDB() {\r\n  if (mongoose.connection.readyState === 0) {\r\n    console.log('Connecting to MongoDB...');\r\n    await mongoose.connect(MONGO_URI)\r\n    console.log('Connected to MongoDB');\r\n  }\r\n}\r\n\r\nexport async function POST(req) {\r\n  try {\r\n    await connectDB()\r\n    const body = await req.json()\r\n    const { firstName, lastName, email, password } = body\r\n    console.log('Received signup request:', { firstName, lastName, email })\r\n    if (!firstName || !lastName || !email || !password) {\r\n      return NextResponse.json({ message: 'All fields are required' }, { status: 400 })\r\n    }\r\n    const existingUser = await User.findOne({ email })\r\n    if (existingUser) {\r\n      console.log('User already exists:', email)\r\n      return NextResponse.json({ message: 'User already exists' }, { status: 409 })\r\n    }\r\n    const hashedPassword = await bcrypt.hash(password, 10)\r\n    const user = new User({ firstName, lastName, email, password: hashedPassword })\r\n    await user.save()\r\n    console.log('User created:', user.email)\r\n    const token = jwt.sign({ userId: user._id, email: user.email }, JWT_SECRET, { expiresIn: '7d' })\r\n    return NextResponse.json({ token }, { status: 201 })\r\n  } catch (err) {\r\n    console.error('Signup error:', err)\r\n    return NextResponse.json({ message: 'Server error', error: err.message }, { status: 500 })\r\n  }\r\n} "],"names":[],"mappings":";;;;;;;;;AACA;;;;;;;;;;;;;;;AAIA,MAAM,YAAY,QAAQ,GAAG,CAAC,SAAS;AACvC,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU;AAEzC,IAAI,CAAC,WAAW;IACd,QAAQ,KAAK,CAAC;IACd,MAAM,IAAI,MAAM;AAClB;AACA,IAAI,CAAC,YAAY;IACf,QAAQ,KAAK,CAAC;IACd,MAAM,IAAI,MAAM;AAClB;AAEA,6DAA6D;AAC7D,MAAM,aAAa,IAAI,SAAS,MAAM,CAAC;IACrC,WAAW;QAAE,MAAM;QAAQ,UAAU;IAAK;IAC1C,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;AAC3C,GAAG;IAAE,YAAY;AAAK;AAEtB,MAAM,OAAO,SAAS,MAAM,CAAC,IAAI,IAAI,SAAS,KAAK,CAAC,QAAQ;AAE5D,eAAe;IACb,IAAI,SAAS,UAAU,CAAC,UAAU,KAAK,GAAG;QACxC,QAAQ,GAAG,CAAC;QACZ,MAAM,SAAS,OAAO,CAAC;QACvB,QAAQ,GAAG,CAAC;IACd;AACF;AAEO,eAAe,KAAK,GAAG;IAC5B,IAAI;QACF,MAAM;QACN,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;QACjD,QAAQ,GAAG,CAAC,4BAA4B;YAAE;YAAW;YAAU;QAAM;QACrE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,UAAU;YAClD,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAA0B,GAAG;gBAAE,QAAQ;YAAI;QACjF;QACA,MAAM,eAAe,MAAM,KAAK,OAAO,CAAC;YAAE;QAAM;QAChD,IAAI,cAAc;YAChB,QAAQ,GAAG,CAAC,wBAAwB;YACpC,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAsB,GAAG;gBAAE,QAAQ;YAAI;QAC7E;QACA,MAAM,iBAAiB,MAAM,OAAO,IAAI,CAAC,UAAU;QACnD,MAAM,OAAO,IAAI,KAAK;YAAE;YAAW;YAAU;YAAO,UAAU;QAAe;QAC7E,MAAM,KAAK,IAAI;QACf,QAAQ,GAAG,CAAC,iBAAiB,KAAK,KAAK;QACvC,MAAM,QAAQ,IAAI,IAAI,CAAC;YAAE,QAAQ,KAAK,GAAG;YAAE,OAAO,KAAK,KAAK;QAAC,GAAG,YAAY;YAAE,WAAW;QAAK;QAC9F,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE;QAAM,GAAG;YAAE,QAAQ;QAAI;IACpD,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAgB,OAAO,IAAI,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC1F;AACF","debugId":null}}]
}